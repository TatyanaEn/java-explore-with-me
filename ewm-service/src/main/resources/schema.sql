DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations_events CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name    VARCHAR(255) NOT NULL,
    email   VARCHAR(512) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name    varchar(255) not null unique,
    CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation          VARCHAR(2000) NOT NULL,
    category_id         BIGINT NOT NULL,
    created_on          TIMESTAMP DEFAULT now(),
    description         VARCHAR(7000),
    event_date          TIMESTAMP NOT NULL,
    initiator_id        BIGINT NOT NULL,
    lat                 FLOAT NOT NULL,
    lon                 FLOAT NOT NULL,
    paid                BOOLEAN NOT NULL,
    participant_limit   BIGINT DEFAULT 0,
    published_on        TIMESTAMP,
    request_moderation  BOOLEAN DEFAULT true,
    state               VARCHAR(50),
    title               VARCHAR(255) NOT NULL,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT fk_events_to_categories FOREIGN KEY(category_id) REFERENCES categories(id),
    CONSTRAINT fk_events_to_users FOREIGN KEY(initiator_id) REFERENCES users(id)
);

ALTER TABLE events
    ADD CONSTRAINT check_event_state
        CHECK (state IN ('PENDING', 'PUBLISHED', 'CANCELED'));


CREATE TABLE IF NOT EXISTS compilations (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title       VARCHAR(50) NOT NULL UNIQUE,
    pinned      BOOLEAN DEFAULT false,
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations_events (
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    compilation_id       BIGINT NOT NULL,
    event_id             BIGINT NOT NULL,
    CONSTRAINT pk_compilations_events PRIMARY KEY (id),
    FOREIGN KEY (compilation_id) REFERENCES compilations (id),
    FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS requests (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created             TIMESTAMP DEFAULT now(),
    event_id            BIGINT NOT NULL,
    requester_id        BIGINT NOT NULL,
    status               VARCHAR(50),

    CONSTRAINT pk_request PRIMARY KEY (id),
    FOREIGN KEY (event_id) REFERENCES events (id),
    FOREIGN KEY (requester_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS comments (
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text      VARCHAR(3000) NOT NULL,
    author_id BIGINT REFERENCES users(id) NOT NULL,
    event_id  BIGINT REFERENCES events(id) NOT NULL,
    created   TIMESTAMP NOT NULL,
    edited    TIMESTAMP
);

